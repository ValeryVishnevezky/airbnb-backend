import{i as t,o,S as a,p as n,U as c,A as i}from"./index-DsQbqFUw.js";const s={save:p,query:O,remove:u,getUserOrders:h,getHostOrders:y};function O(e={}){const r=Object.keys(e).map(d=>`${d}=${e[d]}`).join("&");return t.get(`order?${r}`)}function u(e){return t.delete(`order/${e}`)}async function p(e){var r;return e._id?r=await t.put(`order/${e._id}`,e):r=await t.post("order",e),r}function h(e){return t.get(`order/${e}/user-orders`)}function y(e){return t.get(`order/${e}/host-orders`)}async function f(e){try{const r=await s.save(e);o.dispatch({type:i,order:r})}catch(r){throw console.error("OrderActions: Error in addOrder",r),r}}async function l(e){try{const r=await s.save(e);o.dispatch({type:c,order:r})}catch(r){throw console.error("OrderActions: Error in updateOrder",r),r}}async function w(e){try{const r=await s.getUserOrders(e);return o.dispatch({type:a,orders:r}),r}catch(r){throw console.error("OrderActions: Error in loadUserOrders",r),r}}async function S(e){try{const r=await s.getHostOrders(e);return o.dispatch({type:n,orders:r}),r}catch(r){throw console.error("OrderActions: Error in loadHostOrders",r),r}}export{S as a,f as b,w as l,l as u};
